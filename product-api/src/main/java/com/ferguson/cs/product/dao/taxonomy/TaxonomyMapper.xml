<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ferguson.cs.product.dao.taxonomy.TaxonomyMapper">
		
	<resultMap id="TaxonomyResultMap" type="com.ferguson.cs.model.taxonomy.Taxonomy">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="createdTimestamp" jdbcType="TIMESTAMP" property="createdTimestamp" />
		<result column="lastModifiedTimestamp" jdbcType="TIMESTAMP" property="lastModifiedTimestamp" />
		<result column="version" jdbcType="SMALLINT" property="version" />
		<association property="rootCategory" javaType="TaxonomyCategoryReference">
			<id column="rootCategoryId" property="id" />
			<result column="rootCategoryCode" property="code" />
			<result column="rootCategoryName" property="name" />
			<result column="rootCategoryDescription" property="description" />
			<result column="rootCategoryPath" property="path" />
		</association>
	</resultMap>

	<select id="findTaxonomies"	resultMap="TaxonomyResultMap">
		select
			taxonomy.id id,
			taxonomy.code code,
			taxonomy.description description,
			taxonomy.createdTimestamp createdTimestamp,
			taxonomy.lastModifiedTimestamp lastModifiedTimestamp,
			taxonomy.version as version,
			taxonomy.categoryId rootCategoryId,
			rootCategory.code rootCategoryCode,
			rootCategory.name rootCategoryName,
			rootCategory.description rootCategoryDescription,
			rootCategory.path rootCategoryPath
		from
			Taxonomy taxonomy
			join TaxonomyCategory rootCategory on rootCategory.id = taxonomy.categoryId
			<where>
			<if test="id != null">
			taxonomy.id = #{id}
			</if>		
			<if test="code != null">
			and taxonomy.code = #{code}
			</if>
			</where>		
	</select>

	<delete id="deleteTaxonomy">
		delete from taxonomy where id = #{id} and version = #{version}
	</delete>

	<insert id="insertTaxonomy" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into taxonomy (
			code,
			description,
			createdTimestamp,
			lastModifiedTimestamp,
			version
		) values (
			#{code},
			#{description},
			 #{createdTimestamp}, 
			 #{lastModifiedTimestamp},
			 1
		)
	</insert>
	<update id="updateTaxonomy">
		update
			taxonomy
		set
			description = #{description},
			lastModifiedTimestamp = #{lastModifiedTimestamp},
			version = version + 1
		where id = #{id}  and version = #{version}
	</update>
	<update id="linkTaxonomyRootCategory">
		update
			taxonomy
		set
			categoryId = #{rootCategory.id}
		where id = #{id}
	</update>
	
	<resultMap id="TaxonomyCategoryAttributeResultMap" type="com.ferguson.cs.model.taxonomy.TaxonomyCategoryAttribute">
		<id column="attributeId" property="id" />
		<result column="attributeDefinitionId" property="definition.id" />
		<result column="attributeIsRequired" property="required" />
	</resultMap>

	<resultMap id="TaxonomyCategoryResultMap" type="com.ferguson.cs.model.taxonomy.TaxonomyCategory">
	    <result column="categoryId" jdbcType="VARCHAR" property="id" />
	    <result column="categoryCode" jdbcType="VARCHAR" property="code" />
	    <result column="categoryPath" jdbcType="VARCHAR" property="path" />
	    <result column="categoryName" jdbcType="VARCHAR" property="name" />	    
	    <result column="categoryDescription" jdbcType="VARCHAR" property="description" />
	    <result column="categoryCreatedTimestamp" jdbcType="TIMESTAMP" property="createdTimestamp" />
	    <result column="categoryLastModifiedTimestamp" jdbcType="TIMESTAMP" property="lastModifiedTimestamp" />
	    <result column="categoryVersion" jdbcType="SMALLINT" property="version" />
	    <association property="taxonomy" javaType="TaxonomyReference">
			<id column="taxonomyId" property="id" />
			<result column="taxonomyCode" property="code" />
			<result column="taxonomyDescription" property="description" />
		</association>	    
	    <association property="parentCategory" javaType="TaxonomyCategoryReference">
			<id column="parentCategoryId" property="id" />
			<result column="parentCategoryCode" property="code" />
			<result column="parentCategoryName" property="name" />
			<result column="parentCategoryDescription" property="description" />
			<result column="parentCategoryPath" property="path" />
		</association>
		<collection property="attributes" resultMap="TaxonomyCategoryAttributeResultMap" />		
	</resultMap>

	<select id="findCategories"	resultMap="TaxonomyCategoryResultMap">
		select
			category.id as categoryId,
			category.taxonomyId as taxonomyId,
			taxonomy.code as taxonomyCode,
			taxonomy.description as taxonomyDescription,
			category.code as categoryCode,
			category.name as categoryName,
			category.description as categoryDescription,
			category.path as categoryPath,
			category.parentCategoryId as parentCategoryId,
			parentCategory.code as parentCategoryCode,
			parentCategory.name as parentCategoryName,
			parentCategory.description as parentCategoryDescription,
			parentCategory.path as parentCategoryPath,
			category.createdTimestamp as categoryCreatedTimestamp, 
			category.lastModifiedTimestamp as categoryLastModifiedTimestamp,
			category.version as categoryVersion,
			attribute.id attributeId,
			attribute.attributeDefinitionId attributeDefinitionId,
			attribute.isRequired	attributeIsRequired
		from
			TaxonomyCategory category
			join Taxonomy taxonomy on taxonomy.id = category.taxonomyId
			left join TaxonomyCategory parentCategory on parentCategory.id = category.parentCategoryId
			left join TaxonomyCategoryAttribute attribute on attribute.taxonomyCategoryId = category.id
		<where>
			<if test="taxonomyId != null">
			taxonomy.id = #{taxonomyId}
			</if>		
			<if test="categoryPath">
			category.path = #{categoryPath}
			</if>
			<if test="parentCategoryId != null">
			parentCategory.id = #{parentCategoryId}
			</if>
			<if test="categoryIds != null and categoryIds.size() > 0">
			and category.id in (
			<foreach collection="categoryIds" item="value" separator=",">
			#{value}
			</foreach>
			)
			</if>
		</where>		
	</select>
	
	<delete id="deleteCategory">
		delete from TaxonomyCategory where id = #{id} and version = #{version}
	</delete>

	<insert id="insertCategory" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into TaxonomyCategory (
			taxonomyId,
			code, 
			name,
			description,
			parentCategoryId,
			path,
			createdTimestamp,
			lastModifiedTimestamp, 
			version
		) values (
			#{taxonomy.id,jdbcType=INTEGER},
			#{code,jdbcType=VARCHAR}, 
			#{name,jdbcType=VARCHAR},
			#{description,jdbcType=VARCHAR},
			#{parentCategory.id,jdbcType=INTEGER},
			#{path,jdbcType=VARCHAR},
			#{createdTimestamp,jdbcType=TIMESTAMP},
			#{lastModifiedTimestamp,jdbcType=TIMESTAMP}, 
			1
		)
	</insert>
	<update id="updateCategory">
		update
			taxonomyCategory
		set
			name = #{name,jdbcType=VARCHAR},
			description = #{description,jdbcType=VARCHAR},
			lastModifiedTimestamp = #{lastModifiedTimestamp,jdbcType=TIMESTAMP},
			version = version + 1
		where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=SMALLINT}
	</update>


	<delete id="deleteCatagoryAttributes">
		delete from
			taxonomyCategoryAttribute
		where
			taxonomyCategoryId = #{category.id}
			<if test="exclusionList != null and exclusionList.size() > 0">
			and id not in (
			<foreach collection="exclusionList" item="value" separator=",">
			#{value.id}
			</foreach>
			)
			</if> 		
	</delete>

	<insert id="insertCategoryAttribute" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into taxonomyCategoryAttribute (
			taxonomyCategoryId,
			attributeDefinitionId,
			isRequired
		) values (
			#{category.id,jdbcType=INTEGER},
			#{attribute.definition.id,jdbcType=INTEGER},
			#{attribute.required,jdbcType=BIT}
		)
	</insert>
	<update id="updateCategoryAttribute">
		update
			taxonomyCategoryAttribute
		set
			taxonomyCategoryId = #{category.id,jdbcType=INTEGER},
			attributeDefinitionId = #{attribute.definition.id,jdbcType=INTEGER},
			isRequired = #{attribute.required,jdbcType=BIT}
		where
			id = #{attribute.id,jdbcType=INTEGER}
	</update>

	<delete id="deleteCategoryProductReferences">
		delete from
			TaxonomyCategoryProduct
		where
			taxonomyCategoryId = #{category.id}
			<if test="exclusionList != null and exclusionList.size() > 0">
			and id not in (
			<foreach collection="exclusionList" item="value" separator=",">
			#{value.id}
			</foreach>
			)
			</if>
	</delete>

	<insert id="insertCategoryProductReference" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into taxonomyCategoryAttribute (
			taxonomyCategoryId,
			attributeDefinitionId
		) values (
			#{category.id,jdbcType=INTEGER},
			#{product.id,jdbcType=INTEGER}
		)
	</insert>
	<update id="updateCategoryProductReference">
		update
			TaxonomyCategoryProduct
		set
			taxonomyCategoryId = #{category.id,jdbcType=INTEGER},
			productId = #{product.id,jdbcType=INTEGER},
		where
			id = #{id,jdbcType=INTEGER}	
	</update>
</mapper>
