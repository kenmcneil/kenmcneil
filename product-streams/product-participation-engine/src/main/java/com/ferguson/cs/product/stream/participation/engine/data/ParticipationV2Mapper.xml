<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ferguson.cs.product.stream.participation.engine.data.ParticipationV2Mapper">

	<update id="takeV2PricesOffSaleAndApplyPendingBasePriceUpdates" parameterType="int">
		-- Set cost to a pending base price if present, else to basePrice.
		-- Set basePrice to a pending base price if present.
		-- Set participationId and userId.
		-- The cost and basePrice columns are updated in this one query in order to prevent multiple log entries with no price change.
		UPDATE
			pbCost
		SET
			pbCost.cost = IIF(lbp.basePrice != pbCost.basePrice, lbp.basePrice, pbCost.basePrice),
			pbCost.basePrice = IIF(lbp.basePrice != pbCost.basePrice, lbp.basePrice, pbCost.basePrice),
			pbCost.participationId = 0,
			pbCost.wasPrice = 0.00,
			pbCost.userId = #{userId}
		FROM
			MMC.dbo.pricebook_cost AS pbCost
			JOIN
				tempData.participation.participationOwnerChange AS oc
				ON oc.uniqueId = pbCost.uniqueId
			JOIN
				mmc.product.participationItemPartial AS p
				ON p.participationId = oc.oldParticipationId
					AND p.contentTypeId = 4 -- ParticipationContentType.PARTICIPATION_V2
			JOIN
				mmc.product.participationCalculatedDiscount AS discount
				ON discount.participationId = oc.oldParticipationId
				AND discount.pricebookId = pbCost.pricebookId
			JOIN
				mmc.product.latestBasePrice AS lbp
				ON lbp.uniqueId = pbCost.uniqueId
				AND lbp.pricebookId = pbCost.pricebookId
	</update>

	<update id="applyNewV2CalculatedDiscounts" parameterType="map">
		-- Apply PB1 calculated discounts to products becoming owned by a Participation.
		-- Apply PB1 value even to PB22, where necessary, in order to have all customers get the same sale price.
		-- Also sets the basePrice to any applicable last-on-sale base prices, and uses those
		-- for the calculations. Rounds the discounted price down to 2 decimal places.
		DECLARE @wasPrice decimal(18,2);
		UPDATE
			pbCost
		SET
			@wasPrice = COALESCE(pb1los.wasPrice, wasPrice.wasPrice, 0.00),
			pbcost.cost =
			    ROUND(IIF(
					pb1Discount.isPercent = 1,
					COALESCE(pb1los.basePrice, pb1Cost.basePrice) * pb1Discount.changeValue,
					COALESCE(pb1los.basePrice, pb1Cost.basePrice) + pb1Discount.changeValue
				), 2),
			pbCost.basePrice = COALESCE(los.basePrice, pbCost.basePrice),
			pbCost.participationId = pb1Discount.participationId,
			pbCost.userId = #{userId},
			pbCost.wasPrice = @wasPrice
		FROM
			MMC.dbo.pricebook_cost AS pbCost
			JOIN
				tempData.participation.participationOwnerChange AS oc
				ON oc.uniqueId = pbCost.uniqueId
			JOIN
				mmc.product.participationItemPartial AS p
				ON p.participationId = oc.newParticipationId
					AND p.contentTypeId = 4 -- ParticipationContentType.PARTICIPATION_V2
			JOIN
				mmc.product.participationCalculatedDiscount AS pb1Discount
				ON pb1Discount.participationId = oc.newParticipationId
				AND pb1Discount.pricebookId = 1 --no longer using PB22 for sale pricing
			LEFT JOIN
				mmc.dbo.pricebookwasprice AS wasPrice
				ON wasPrice.uniqueId = pbCost.uniqueId
			LEFT JOIN
				mmc.product.participationLastOnSale AS los
				ON los.uniqueId = pbCost.uniqueId
					AND los.pricebookId = pbCost.pricebookId
					AND DATEDIFF_BIG(minute, los.saleDate, #{processingDate}) &lt; #{coolOffPeriodMinutes}
			LEFT JOIN
				mmc.product.participationLastOnSale AS pb1los
				ON pb1los.uniqueId = pbCost.uniqueId
					AND pb1los.pricebookId = 1
					AND DATEDIFF_BIG(minute, pb1los.saleDate, #{processingDate}) &lt; #{coolOffPeriodMinutes}
			LEFT JOIN
				MMC.dbo.pricebook_cost AS pb1Cost
				ON pbCost.uniqueId = pb1Cost.uniqueId
				AND pb1Cost.pricebookId = 1
	</update>

	<insert id="insertParticipationV2CalculatedDiscounts">
		INSERT INTO mmc.product.participationCalculatedDiscount (
			participationId,
			pricebookId,
			changeValue,
			isPercent,
			templateId
		)
		VALUES
		<foreach collection="calculatedDiscounts" item="calculatedDiscount" index="index" open="(" separator="),(" close=")">
			#{calculatedDiscount.participationId},
			#{calculatedDiscount.pricebookId},
			#{calculatedDiscount.changeValue},
			#{calculatedDiscount.isPercent},
			#{calculatedDiscount.templateId}
		</foreach>
	</insert>

	<delete id="deleteParticipationV2CalculatedDiscounts" parameterType="int">
		DELETE FROM
			mmc.product.participationCalculatedDiscount
		WHERE
			participationId = #{participationId}
	</delete>

	<insert id="insertParticipationV2CalculatedDiscountsHistory">
		INSERT INTO logs.dbo.participationCalculatedDiscountHistory (
			participationItemPartialHistoryId,
			pricebookId,
			changeValue,
			isPercent,
			templateId
		)
		VALUES
		<foreach collection="calculatedDiscounts" item="calculatedDiscount" index="index" open="(" separator="),(" close=")">
			#{partialHistoryId},
			#{calculatedDiscount.pricebookId},
			#{calculatedDiscount.changeValue},
			#{calculatedDiscount.isPercent},
			#{calculatedDiscount.templateId}
		</foreach>
	</insert>
</mapper>
